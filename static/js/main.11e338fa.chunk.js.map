{"version":3,"sources":["components/ContactForm/ContactForm.styles.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styles.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.styles.jsx","components/ContactList/ContactList.jsx","components/Container/Container.styles.jsx","components/Container/Container.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Form","styled","form","Label","label","Input","input","Button","button","ContactForm","onSubmit","useState","name","setName","number","setNumber","idInputName","uuidv4","idInputNumber","handleInputChange","e","currentTarget","value","resetForm","preventDefault","htmlFor","onChange","type","id","autoComplete","placeholder","pattern","title","required","disabled","Filter","ContactsList","ul","ContactListItem","li","ContactListText","p","BtnDel","ContactList","contacts","onDelete","map","onClick","Container","div","Section","children","App","JSON","parse","window","localStorage","getItem","initialContacts","setContacts","filter","setFilter","useEffect","setItem","stringify","entry","find","contact","toLowerCase","alert","normalizedFilter","includes","getVisibleContacts","contactId","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.11e338fa.chunk.js","sourcesContent":["import styled from '@emotion/styled'\r\nexport const Form = styled.form``\r\nexport const Label = styled.label`\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n  justify-content: center;\r\n  padding-bottom: 15px;\r\n  margin: 0;\r\n`\r\nexport const Input = styled.input`\r\n  display: flex;\r\n  padding: 6px;\r\n  margin-bottom: 20px;\r\n  border-radius: 5px;\r\n  min-width: 300px;\r\n  cursor: pointer;\r\n  box-shadow: rgba(38, 38, 112, 0.25) 0px 50px 100px -20px,\r\n    rgba(34, 74, 114, 0.35) 0px -2px 6px 0px inset;\r\n  &:focus {\r\n    border: 2px solid #928ec7;\r\n    outline: none;\r\n  }\r\n`\r\nexport const Button = styled.button`\r\n  background-color: #ebedf32c;\r\n  color: #161127;\r\n  border: none;\r\n  padding: 8px 16px;\r\n  font-size: 14px;\r\n  line-height: 24px;\r\n  font-weight: bold;\r\n  text-transform: uppercase;\r\n  cursor: pointer;\r\n  border-radius: 4px;\r\n  border: 2px solid #1f3d9e30;\r\n  box-shadow: 0 12px 16px 0 #278cbb3d, 0 17px 50px 0 #1f3d9e30;\r\n  &:hover {\r\n    border-radius: 4px;\r\n    background-color: #020c2b2c;\r\n    transition-duration: 250ms;\r\n    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\r\n    box-shadow: 0 12px 16px 0 #278cbb3d, 0 17px 50px 0 #1f3d9e30;\r\n  }\r\n`\r\n","import React, { useState } from 'react'\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport PropTypes from 'prop-types'\r\nimport { Form, Label, Input, Button } from './ContactForm.styles'\r\n\r\nexport default function ContactForm({ onSubmit }) {\r\n  const [name, setName] = useState('')\r\n  const [number, setNumber] = useState('')\r\n\r\n  const idInputName = uuidv4()\r\n  const idInputNumber = uuidv4()\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.currentTarget\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value)\r\n        break\r\n      case 'number':\r\n        setNumber(value)\r\n        break\r\n      default:\r\n        return\r\n    }\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n    onSubmit(name, number)\r\n    resetForm()\r\n  }\r\n\r\n  const resetForm = () => {\r\n    setName('')\r\n    setNumber('')\r\n  }\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <Label htmlFor={idInputName}>\r\n        Name\r\n        <Input\r\n          onChange={handleInputChange}\r\n          type=\"text\"\r\n          id={idInputName}\r\n          name=\"name\"\r\n          autoComplete=\"off\"\r\n          placeholder=\"Enter name\"\r\n          value={name}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n      </Label>\r\n      <Label htmlFor={idInputNumber}>\r\n        Number\r\n        <Input\r\n          onChange={handleInputChange}\r\n          type=\"tel\"\r\n          id={idInputNumber}\r\n          name=\"number\"\r\n          autoComplete=\"off\"\r\n          placeholder=\"Enter number\"\r\n          value={number}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n      </Label>\r\n      <Button type=\"submit\" disabled={!name || !number}>\r\n        Add contact\r\n      </Button>\r\n    </Form>\r\n  )\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n}\r\n","import styled from '@emotion/styled'\r\nexport const Label = styled.label`\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n  justify-content: center;\r\n  padding-bottom: 15px;\r\n  margin: 0;\r\n`\r\nexport const Input = styled.input`\r\n  display: flex;\r\n  padding: 6px;\r\n  margin-bottom: 20px;\r\n  border-radius: 5px;\r\n  min-width: 300px;\r\n  cursor: pointer;\r\n  box-shadow: rgba(50, 50, 93, 0.25) 0px 50px 100px -20px,\r\n    rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset;\r\n  &:focus {\r\n    border: 2px solid #eee;\r\n    outline: none;\r\n  }\r\n`\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Label, Input } from './Filter.styles'\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <Label>\r\n      Find contacts by name:\r\n      <Input onChange={onChange} type=\"text\" value={value}></Input>\r\n    </Label>\r\n  )\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n}\r\nexport default Filter\r\n","import styled from '@emotion/styled'\r\nexport const ContactsList = styled.ul`\r\n  padding: 0;\r\n`\r\nexport const ContactListItem = styled.li`\r\n  display: flex;\r\n  align-items: center;\r\n`\r\nexport const ContactListText = styled.p`\r\n  font-size: 18px;\r\n  line-height: 20px;\r\n  font-weight: bold;\r\n  word-break: break-all;\r\n`\r\nexport const BtnDel = styled.button`\r\n  margin-left: auto;\r\n  background-color: #ebedf32c;\r\n  color: #161127;\r\n  border: none;\r\n  padding: 6px 12px;\r\n  font-size: 12px;\r\n  line-height: 14px;\r\n  cursor: pointer;\r\n  border-radius: 4px;\r\n  border: 2px solid #1f3d9e30;\r\n  box-shadow: 0 12px 16px 0 #278cbb3d, 0 17px 50px 0 #1f3d9e30;\r\n  &:hover {\r\n    border-radius: 4px;\r\n    background-color: #020c2b2c;\r\n    transition-duration: 250ms;\r\n    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\r\n    box-shadow: 0 12px 16px 0 #278cbb3d, 0 17px 50px 0 #1f3d9e30;\r\n  }\r\n`\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  ContactsList,\r\n  ContactListItem,\r\n  ContactListText,\r\n  BtnDel,\r\n} from './ContactList.styles'\r\n\r\nexport default function ContactList({ contacts, onDelete }) {\r\n  return (\r\n    <ContactsList>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <ContactListItem key={id}>\r\n          <ContactListText>\r\n            {name}:&nbsp;{number}\r\n          </ContactListText>\r\n          <BtnDel onClick={() => onDelete(id)}>Delete</BtnDel>\r\n        </ContactListItem>\r\n      ))}\r\n    </ContactsList>\r\n  )\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string,\r\n      number: PropTypes.string,\r\n    }),\r\n  ),\r\n  onDelete: PropTypes.func.isRequired,\r\n}\r\n","import styled from '@emotion/styled'\r\nexport const Container = styled.div`\r\n  max-width: 350px;\r\n  margin-top: 30px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  padding: 15px 20px;\r\n  background-color: #cfcfe6;\r\n  border: 2mm ridge #1c2e9499;\r\n  box-shadow: 0 5px 5px #0000008c;\r\n  border-radius: 15px;\r\n  color: #161127;\r\n`\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Container } from './Container.styles'\r\n\r\nexport default function Section({ children }) {\r\n  return <Container>{children}</Container>\r\n}\r\n\r\nSection.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n","import React, { useState, useEffect } from 'react'\nimport { v4 as uuidv4 } from 'uuid'\nimport initialContacts from './data/Contacts.json'\nimport ContactForm from './components/ContactForm/ContactForm'\nimport Filter from './components/Filter/Filter'\nimport ContactList from './components/ContactList/ContactList'\nimport Container from './components/Container/Container'\n\nexport default function App() {\n  const [contacts, setContacts] = useState(() => {\n    return (\n      JSON.parse(window.localStorage.getItem('contacts')) ?? initialContacts\n    )\n  })\n  const [filter, setFilter] = useState('')\n\n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(contacts))\n  }, [contacts])\n\n  const formSubmitHandle = (name, number) => {\n    const entry = {\n      id: uuidv4(),\n      name,\n      number,\n    }\n\n    contacts.find(\n      (contact) =>\n        contact.name.toLowerCase() === entry.name.toLowerCase() &&\n        contact.number === entry.number,\n    )\n      ? alert(`${name} is already in contacts`)\n      : setContacts([entry, ...contacts])\n  }\n  const deleteContact = (contactId) => {\n    setContacts(contacts.filter((contact) => contact.id !== contactId))\n  }\n\n  const changeFilter = (e) => {\n    setFilter(e.currentTarget.value)\n  }\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase()\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    )\n  }\n\n  return (\n    <>\n      <Container>\n        <h2>Phonebook</h2>\n        <ContactForm onSubmit={formSubmitHandle} />\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={changeFilter} />\n        <ContactList contacts={getVisibleContacts()} onDelete={deleteContact} />\n      </Container>\n    </>\n  )\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}